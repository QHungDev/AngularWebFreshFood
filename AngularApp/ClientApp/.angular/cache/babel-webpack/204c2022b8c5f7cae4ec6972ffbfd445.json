{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewChild, Input, NgModule } from '@angular/core';\nconst _c0 = [\"ref\"];\n\nclass ChartjsComponent {\n  constructor(zone) {\n    this.zone = zone;\n    this.height = 150;\n    this.width = 300;\n  }\n\n  ngAfterViewInit() {\n    this.renderChart();\n  }\n\n  ngOnChanges() {\n    if (this.chartInstance && this.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  }\n\n  updateChart() {\n    if (!this.chartInstance) {\n      return;\n    }\n\n    this.chartInstance.data = this.data;\n    this.chartInstance.options = this.options;\n    this.chartInstance.update(this.updateMode);\n  }\n\n  renderChart() {\n    const node = this.ref.nativeElement; // In order to allow for universal rendering, we import chartjs runtime with `require` to prevent node errors\n    // eslint-disable-next-line @typescript-eslint/naming-convention,@typescript-eslint/no-shadow\n\n    this.zone.runOutsideAngular(() => __awaiter(this, void 0, void 0, function* () {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const {\n        Chart\n      } = yield import('chart.js');\n      this.chartInstance = new Chart(node, {\n        type: this.type,\n        data: this.data,\n        options: this.options,\n        plugins: this.plugins\n      });\n    }));\n  }\n\n}\n\nChartjsComponent.ɵfac = function ChartjsComponent_Factory(t) {\n  return new (t || ChartjsComponent)(i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nChartjsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ChartjsComponent,\n  selectors: [[\"ngx-chartjs\"]],\n  viewQuery: function ChartjsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ref = _t.first);\n    }\n  },\n  inputs: {\n    type: \"type\",\n    data: \"data\",\n    options: \"options\",\n    height: \"height\",\n    width: \"width\",\n    plugins: \"plugins\",\n    redraw: \"redraw\",\n    updateMode: \"updateMode\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"ref\", \"\"]],\n  template: function ChartjsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"canvas\", null, 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"height\", ctx.height)(\"width\", ctx.width);\n    }\n  },\n  styles: [\"[_nghost-%COMP%]{display:block}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartjsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-chartjs',\n      template: `<canvas #ref [attr.height]=\"height\" [attr.width]=\"width\"></canvas>`,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [':host { display: block }']\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, {\n    ref: [{\n      type: ViewChild,\n      args: ['ref']\n    }],\n    type: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    plugins: [{\n      type: Input\n    }],\n    redraw: [{\n      type: Input\n    }],\n    updateMode: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ChartjsModule {}\n\nChartjsModule.ɵfac = function ChartjsModule_Factory(t) {\n  return new (t || ChartjsModule)();\n};\n\nChartjsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChartjsModule\n});\nChartjsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartjsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [ChartjsComponent],\n      declarations: [ChartjsComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ChartjsComponent, ChartjsModule };","map":{"version":3,"sources":["D:/AdminSiteCore-Standard/AdminSiteCore-Standard/AdminSiteCore/AngularApp/ClientApp/node_modules/@ctrl/ngx-chartjs/fesm2015/ctrl-ngx-chartjs.mjs"],"names":["__awaiter","i0","Component","ChangeDetectionStrategy","ViewChild","Input","NgModule","ChartjsComponent","constructor","zone","height","width","ngAfterViewInit","renderChart","ngOnChanges","chartInstance","redraw","destroy","updateChart","data","options","update","updateMode","node","ref","nativeElement","runOutsideAngular","Chart","type","plugins","ɵfac","NgZone","ɵcmp","args","selector","template","changeDetection","OnPush","styles","ChartjsModule","ɵmod","ɵinj","exports","declarations"],"mappings":"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","sourcesContent":["import { __awaiter } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewChild, Input, NgModule } from '@angular/core';\n\nclass ChartjsComponent {\n    constructor(zone) {\n        this.zone = zone;\n        this.height = 150;\n        this.width = 300;\n    }\n    ngAfterViewInit() {\n        this.renderChart();\n    }\n    ngOnChanges() {\n        if (this.chartInstance && this.redraw) {\n            this.chartInstance.destroy();\n            this.renderChart();\n            return;\n        }\n        this.updateChart();\n    }\n    updateChart() {\n        if (!this.chartInstance) {\n            return;\n        }\n        this.chartInstance.data = this.data;\n        this.chartInstance.options = this.options;\n        this.chartInstance.update(this.updateMode);\n    }\n    renderChart() {\n        const node = this.ref.nativeElement;\n        // In order to allow for universal rendering, we import chartjs runtime with `require` to prevent node errors\n        // eslint-disable-next-line @typescript-eslint/naming-convention,@typescript-eslint/no-shadow\n        this.zone.runOutsideAngular(() => __awaiter(this, void 0, void 0, function* () {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            const { Chart } = yield import('chart.js');\n            this.chartInstance = new Chart(node, {\n                type: this.type,\n                data: this.data,\n                options: this.options,\n                plugins: this.plugins,\n            });\n        }));\n    }\n}\nChartjsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ChartjsComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nChartjsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ChartjsComponent, selector: \"ngx-chartjs\", inputs: { type: \"type\", data: \"data\", options: \"options\", height: \"height\", width: \"width\", plugins: \"plugins\", redraw: \"redraw\", updateMode: \"updateMode\" }, viewQueries: [{ propertyName: \"ref\", first: true, predicate: [\"ref\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `<canvas #ref [attr.height]=\"height\" [attr.width]=\"width\"></canvas>`, isInline: true, styles: [\":host{display:block}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ChartjsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-chartjs',\n                    template: `<canvas #ref [attr.height]=\"height\" [attr.width]=\"width\"></canvas>`,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [':host { display: block }'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { ref: [{\n                type: ViewChild,\n                args: ['ref']\n            }], type: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], plugins: [{\n                type: Input\n            }], redraw: [{\n                type: Input\n            }], updateMode: [{\n                type: Input\n            }] } });\n\nclass ChartjsModule {\n}\nChartjsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ChartjsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nChartjsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ChartjsModule, declarations: [ChartjsComponent], exports: [ChartjsComponent] });\nChartjsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ChartjsModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ChartjsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [ChartjsComponent],\n                    declarations: [ChartjsComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChartjsComponent, ChartjsModule };\n"]},"metadata":{},"sourceType":"module"}